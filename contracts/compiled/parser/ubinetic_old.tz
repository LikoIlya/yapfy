{ parameter
    (or (or (set %getPrice nat) (nat %setTimestampLimit))
        (or (pair %updateAsset (string %assetName) (nat %tokenId))
            (pair %updateOracle (address %oracle) (nat %oraclePrecision) (nat %timestampLimit)))) ;
  storage
    (pair (address %router)
          (address %oracle)
          (nat %oraclePrecision)
          (int %timestampLimit)
          (big_map %assetName nat string)
          (big_map %assetId string nat)
          (big_map %metadata string bytes)) ;
  code { PUSH string "P_NOT_ROUTER" ;
         PUSH nat 1000000000000000000000000000000000000 ;
         NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           (pair (option nat) string)
           nat
           { UNPAIR ; IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         PUSH string "XTZ" ;
         DIG 6 ;
         UNPAIR ;
         PUSH string "DONT_SEND_TEZOS" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         PAIR ;
         DUP 6 ;
         SWAP ;
         EXEC ;
         DROP ;
         IF_LEFT
           { IF_LEFT
               { DIG 4 ;
                 DIG 5 ;
                 DROP 2 ;
                 DUP 3 ;
                 DUP 3 ;
                 GET 3 ;
                 PUSH string "P_NOT_ORACLE_CONTRACT" ;
                 SWAP ;
                 DIG 2 ;
                 VIEW "get_price" nat ;
                 PAIR ;
                 DUP 5 ;
                 SWAP ;
                 EXEC ;
                 NIL operation ;
                 DIG 2 ;
                 ITER { SWAP ;
                        DUP 4 ;
                        GET 9 ;
                        DUP 3 ;
                        PUSH string "STRING_NOT_DEFINED" ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { FAILWITH } { SWAP ; DROP } ;
                        DUP ;
                        DUP 6 ;
                        GET 3 ;
                        PUSH string "P_NOT_ORACLE_CONTRACT" ;
                        SWAP ;
                        DIG 2 ;
                        VIEW "get_price" nat ;
                        PAIR ;
                        DUP 8 ;
                        SWAP ;
                        EXEC ;
                        DUP 7 ;
                        DIG 2 ;
                        COMPARE ;
                        EQ ;
                        IF { DUP 8 ;
                             DUP 6 ;
                             GET 5 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR }
                           { DUP 4 ;
                             DUP 9 ;
                             DIG 2 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR } ;
                        DUP 9 ;
                        DUP 6 ;
                        CAR ;
                        CONTRACT %receivePrice (pair (nat %tokenId) (nat %priceF)) ;
                        IF_NONE { FAILWITH } { SWAP ; DROP } ;
                        PUSH mutez 0 ;
                        DIG 2 ;
                        DIG 4 ;
                        PAIR ;
                        TRANSFER_TOKENS ;
                        CONS } ;
                 SWAP ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 5 ;
                 PAIR }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 6 ;
                 DROP 3 ;
                 DIG 4 ;
                 DUP 3 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 INT ;
                 UPDATE 7 ;
                 SWAP ;
                 PAIR } }
           { DIG 2 ;
             DIG 3 ;
             DIG 6 ;
             DROP 3 ;
             IF_LEFT
               { DIG 4 ;
                 DUP 3 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 GET 9 ;
                 DUP 3 ;
                 CAR ;
                 DIG 3 ;
                 CDR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 9 ;
                 SWAP ;
                 PAIR }
               { DIG 4 ;
                 DUP 3 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 UPDATE 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 UPDATE 5 ;
                 SWAP ;
                 GET 4 ;
                 INT ;
                 UPDATE 7 ;
                 SWAP ;
                 PAIR } } } }

