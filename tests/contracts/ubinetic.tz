{ parameter (or
              (or (address %add_valid_source)
                  (pair %fulfill (bytes %script) (bytes %payload)))
              (or (address %remove_valid_source)
                  (or (address %set_administrator) (bytes %set_valid_script)))) ;
  storage (pair
            (pair (pair (address %administrator) (nat %last_epoch))
                  (pair (big_map %prices string (pair (nat %last_epoch) (nat %price)))
                        (nat %response_threshold)))
            (pair
              (pair (nat %valid_epoch)
                    (map %valid_prices string
                                       (pair (set %valid_respondants address)
                                             (nat %price))))
              (pair (bytes %valid_script)
                    (pair (set %valid_sources address) (nat %validity_window_in_epochs))))) ;
  code { LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             PUSH nat 0 ;
             DUP 3 ;
             COMPARE ;
             GT ;
             IF {} { PUSH int 501 ; FAILWITH } ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF
               { PUSH bool True }
               { SWAP ; DUP ; DUG 2 ; SWAP ; DUP ; DUG 2 ; SUB ; ABS ; PUSH nat 4 ; DUP 3 ; LSR ; COMPARE ; GT } ;
             IF
               { DROP }
               { PUSH int 0 ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 SUB ;
                 COMPARE ;
                 GT ;
                 IF
                   { DUP ;
                     PUSH nat 4 ;
                     SWAP ;
                     LSR ;
                     SWAP ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 106 ; FAILWITH } {} }
                   { DUP ; PUSH nat 4 ; SWAP ; LSR ; ADD } } } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 401 ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 GET 7 ;
                 PUSH bool True ;
                 DIG 3 ;
                 UPDATE ;
                 UPDATE 7 }
               { DUP ;
                 CAR ;
                 DUP 3 ;
                 GET 5 ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 430 ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 7 ;
                 SOURCE ;
                 MEM ;
                 IF {} { PUSH int 431 ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 UNPACK (pair nat (list (pair string nat))) ;
                 IF_NONE { PUSH int 128 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 PUSH nat 900 ;
                 SWAP ;
                 EDIV ;
                 IF_NONE { PUSH int 130 ; FAILWITH } { CAR } ;
                 PUSH nat 900 ;
                 PUSH timestamp "1970-01-01T00:00:00Z" ;
                 NOW ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 131 ; FAILWITH } {} ;
                 EDIV ;
                 IF_NONE { PUSH int 131 ; FAILWITH } { CAR } ;
                 PUSH nat 1 ;
                 DUP 3 ;
                 ADD ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 903 ; FAILWITH } ;
                 DUP 4 ;
                 GET 3 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 NEQ ;
                 IF
                   { DIG 3 ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     EMPTY_MAP string (pair (set address) nat) ;
                     DUP 4 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 3 }
                   {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 ITER { DUP 5 ;
                        GET 3 ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        MEM ;
                        IF
                          {}
                          { DIG 4 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            DUP 5 ;
                            CDR ;
                            EMPTY_SET address ;
                            PAIR ;
                            SOME ;
                            DUP 6 ;
                            CAR ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 4 } ;
                        DUP 5 ;
                        GET 3 ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        GET ;
                        IF_NONE { PUSH int 140 ; FAILWITH } {} ;
                        CDR ;
                        DUP ;
                        DUP 3 ;
                        CDR ;
                        SUB ;
                        ABS ;
                        PUSH nat 10 ;
                        DUP 3 ;
                        LSR ;
                        COMPARE ;
                        GE ;
                        IF
                          { DIG 5 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            DUP ;
                            DUP 7 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 142 ; FAILWITH } {} ;
                            DUP ;
                            CAR ;
                            PUSH bool True ;
                            SOURCE ;
                            UPDATE ;
                            UPDATE 1 ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 7 ;
                            GET 3 ;
                            CDR ;
                            DUP 4 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 143 ; FAILWITH } {} ;
                            CAR ;
                            SIZE ;
                            COMPARE ;
                            GE ;
                            IF
                              { DUP 6 ;
                                CAR ;
                                GET 3 ;
                                DUP 3 ;
                                CAR ;
                                MEM ;
                                IF
                                  { DUP 6 ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    DUP 11 ;
                                    DIG 5 ;
                                    DIG 10 ;
                                    CAR ;
                                    GET 3 ;
                                    DUP 8 ;
                                    CAR ;
                                    GET ;
                                    IF_NONE { PUSH int 147 ; FAILWITH } {} ;
                                    CDR ;
                                    PAIR ;
                                    EXEC ;
                                    DUP 7 ;
                                    PAIR ;
                                    SOME ;
                                    DIG 5 ;
                                    CAR ;
                                    UPDATE ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    DUG 3 }
                                  { DIG 5 ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    DIG 4 ;
                                    DUP 7 ;
                                    PAIR ;
                                    SOME ;
                                    DIG 5 ;
                                    CAR ;
                                    UPDATE ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    DUG 3 } }
                              { DROP 2 } }
                          { DROP 2 } } ;
                 DROP 3 ;
                 SWAP ;
                 DROP } }
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 401 ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 GET 7 ;
                 PUSH bool False ;
                 DIG 3 ;
                 UPDATE ;
                 UPDATE 7 }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 401 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 401 ; FAILWITH } ;
                     UPDATE 5 } } } ;
         NIL operation ;
         PAIR } ;
  view "get_price" string nat
        { UNPAIR ;
          SWAP ;
          DUP ;
          DUG 2 ;
          GET 8 ;
          PUSH nat 900 ;
          PUSH timestamp "1970-01-01T00:00:00Z" ;
          NOW ;
          SUB ;
          ISNAT ;
          IF_NONE { PUSH int 155 ; FAILWITH } {} ;
          EDIV ;
          IF_NONE { PUSH int 155 ; FAILWITH } { CAR } ;
          SUB ;
          ISNAT ;
          IF_NONE { PUSH int 156 ; FAILWITH } {} ;
          DUP 3 ;
          CAR ;
          GET 3 ;
          DUP 3 ;
          GET ;
          IF_NONE { PUSH int 156 ; FAILWITH } {} ;
          CAR ;
          COMPARE ;
          GT ;
          IF {} { PUSH int 900 ; FAILWITH } ;
          PUSH nat 0 ;
          DUP 3 ;
          CAR ;
          GET 3 ;
          DUP 3 ;
          GET ;
          IF_NONE { PUSH int 157 ; FAILWITH } {} ;
          CDR ;
          COMPARE ;
          GT ;
          IF {} { PUSH int 905 ; FAILWITH } ;
          SWAP ;
          CAR ;
          GET 3 ;
          SWAP ;
          GET ;
          IF_NONE { PUSH int 158 ; FAILWITH } {} ;
          CDR } }